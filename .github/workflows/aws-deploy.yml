# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBeansTalk
env:
  EB_PACKAGE_S3_BUCKET_NAME: "github-actions-moody" 
  EB_APPLICATON_NAME: "MoodyTest"
  EB_ENV_NAME: "MoodyTest-env"
  DEPLOY_PACKAGE_NAME: "MoodyTest-app${{ github.sha }}"
  AWS_REGION: "eu-central-1"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci_pipeline:
    runs-on: [ubuntu-latest]
    steps:
      - name: Git clone our repository
        uses: actions/checkout@v1
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
           dotnet-version: 3.1.301
           
      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: ././LetsDoIt.Moody
        
      - name: dotnet publish
        working-directory: ././LetsDoIt.Moody
        run: |
         dotnet publish -c Release -o dotnetcorewebapp
         
 
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
         args: --delete
        env:
         AWS_S3_BUCKET: ${{ env.EB_PACKAGE_S3_BUCKET_NAME }}
         AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_ACCESS_KEY }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_SECRET_KEY }}
         AWS_REGION: ${{ env.AWS_REGION }}
         SOURCE_DIR: "././LetsDoIt.Moody/dotnetcorewebapp"
         DEST_DIR: "${{ env.DEPLOY_PACKAGE_NAME }}.zip"
        
      - name: Print nice message on completion of CI Pipeline
        run: echo "CI Pipeline part finished successfully"
        
  cd_pipeline:
   runs-on: [ubuntu-latest]
   needs: [ci_pipeline]
   steps:
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

     - name: Create new ElasticBeansTalk Application Version
       run: | 
        aws elasticbeanstalk create-application-version \
        --application-name ${{env.EB_APPLICATON_NAME}} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CommitSHA-${{ github.sha }}"
         
     - name: Deploy new Application Version
       run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENV_NAME }} --version-label "Ver-${{ github.sha }}"
       
     - name: Print nice message on completion of CD Pipeline
       run: echo "CD Pipeline part finished successfully"  
     
     
     
     
