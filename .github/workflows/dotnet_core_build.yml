name: Build & Test

on:  
  workflow_dispatch:  
  push:
    branches: 
      - master
      - moody-**
  pull_request:
    branches: 
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
      config: 'Release'

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        
    - name: Install dependencies
      run: dotnet restore
      working-directory: ././LetsDoIt.Moody
      
    - name: Build
      run: dotnet build --configuration $config --no-restore
      working-directory: ././LetsDoIt.Moody
      
      # set pr number, if it's a pr build
    - name: set pr build number
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3

      # set report file and title 
    - name: Set Test Title
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "::set-env name=title::Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})"
              echo "::set-env name=file_name::TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md"
            else
              echo "::set-env name=title::Test Run ${{github.run_number}}"
              echo "::set-env name=file_name::TestReport.${{github.run_number}}.md"
            fi
            
      # run tests with built project
    - name: Test PR      
      run: dotnet test --no-restore --no-build --configuration $config --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};" --collect "Code coverage"
      working-directory: ././LetsDoIt.Moody

      # upload report as build artifact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Test Run'
        path: ${{github.workspace}}/${{env.file_name}}
        retention-days: 1
        
      # add report as PR comment (if PR)
    - name: comment PR
      uses: machine-learning-apps/pr-comment@master
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: ${{env.file_name}}
